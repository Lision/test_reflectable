// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'expanding_generics_test.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.Reflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.GenericClassMirrorImpl(
            r"C",
            r"test_reflectable.test.expanding_generics_test.C",
            7,
            0,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}, (o) {
          return o is prefix0.C;
        }, null, 0),
        new r.TypeVariableMirrorImpl(
            r"X",
            r"test_reflectable.test.expanding_generics_test.C.X",
            const prefix0.Reflector(),
            -1,
            0,
            null)
      ],
      null,
      null,
      <Type>[prefix0.C],
      1,
      {},
      {},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
