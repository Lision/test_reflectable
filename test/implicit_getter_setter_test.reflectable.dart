// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'implicit_getter_setter_test.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.Reflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"A",
            r"test_reflectable.test.implicit_getter_setter_test.A",
            7,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 3, 4],
            const <int>[5, 6, 7],
            const <int>[8, 9, 10, 11],
            -1,
            {
              r"f3": () => prefix0.A.f3,
              r"f4": () => prefix0.A.f4,
              r"f5": () => prefix0.A.f5
            },
            {r"f3=": (value) => prefix0.A.f3 = value},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(
            r"f1", 32773, 0, const prefix0.Reflector(), 0, -1, -1, null),
        new r.VariableMirrorImpl(
            r"f2", 33797, 0, const prefix0.Reflector(), 0, -1, -1, null),
        new r.VariableMirrorImpl(
            r"f3", 32789, 0, const prefix0.Reflector(), 0, -1, -1, null),
        new r.VariableMirrorImpl(
            r"f4", 33813, 0, const prefix0.Reflector(), 0, -1, -1, null),
        new r.VariableMirrorImpl(
            r"f5", 17557, 0, const prefix0.Reflector(), null, -1, -1, null),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, -1, -1, 5),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 0, -1, -1, 6),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, -1, -1, 7),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 2, -1, -1, 8),
        new r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 2, -1, -1, 9),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.Reflector(), 3, -1, -1, 10),
        new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 4, -1, -1, 11)
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(r"_f1", 32870, 6, const prefix0.Reflector(),
            0, -1, -1, null, null, null),
        new r.ParameterMirrorImpl(r"_f3", 32870, 9, const prefix0.Reflector(),
            0, -1, -1, null, null, null)
      ],
      <Type>[prefix0.A],
      1,
      {
        r"f1": (dynamic instance) => instance.f1,
        r"f2": (dynamic instance) => instance.f2
      },
      {r"f1=": (dynamic instance, value) => instance.f1 = value},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
