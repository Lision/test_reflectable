// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'new_instance_optional_arguments_test.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.Reflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"A",
            r"test_reflectable.test.new_instance_optional_arguments_test.A",
            7,
            0,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r"a0": (b) => ([opt1]) => b ? new prefix0.A.a0(opt1) : null,
              r"b0": (b) =>
                  ([opt1, opt2]) => b ? new prefix0.A.b0(opt1, opt2) : null,
              r"c0": (b) => ([opt1 = 499]) => b ? new prefix0.A.c0(opt1) : null,
              r"d0": (b) => ([opt1 = 499, opt2 = 42]) =>
                  b ? new prefix0.A.d0(opt1, opt2) : null,
              r"a1": (b) =>
                  (req1, [opt1]) => b ? new prefix0.A.a1(req1, opt1) : null,
              r"b1": (b) => (req1, [opt1, opt2]) =>
                  b ? new prefix0.A.b1(req1, opt1, opt2) : null,
              r"c1": (b) => (req1, [opt1 = 499]) =>
                  b ? new prefix0.A.c1(req1, opt1) : null,
              r"d1": (b) => (req1, [opt1 = 499, opt2 = 42]) =>
                  b ? new prefix0.A.d1(req1, opt1, opt2) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"ClazzA",
            r"test_reflectable.test.new_instance_optional_arguments_test.ClazzA",
            7,
            1,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r"": (b) =>
                  ([property = null]) => b ? new prefix0.ClazzA(property) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {})
      ],
      null,
      null,
      <Type>[prefix0.A, prefix0.ClazzA],
      2,
      {},
      {},
      null,
      [
        const [1, 1, null],
        const [2, 2, null],
        const [2, 1, null],
        const [3, 2, null]
      ])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
