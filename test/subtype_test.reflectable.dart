// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:reflectable/reflectable.dart' as prefix1;
import 'package:reflectable/src/reflectable_base.dart' as prefix3;
import 'package:reflectable/src/reflectable_transformer_based.dart' as prefix2;
import 'subtype_test.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.Reflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Reflector",
            r"test_reflectable.test.subtype_test.Reflector",
            7,
            0,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            13,
            {},
            {},
            {},
            -1,
            0,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"InsufficientReflector",
            r"test_reflectable.test.subtype_test.InsufficientReflector",
            7,
            1,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            13,
            {},
            {},
            {},
            -1,
            1,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"A",
            r"test_reflectable.test.subtype_test.A",
            7,
            2,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            14,
            {},
            {},
            {},
            -1,
            2,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"B",
            r"test_reflectable.test.subtype_test.B",
            7,
            3,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            2,
            {},
            {},
            {},
            -1,
            3,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"C",
            r"test_reflectable.test.subtype_test.C",
            7,
            4,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            3,
            {},
            {},
            {},
            -1,
            4,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"D",
            r"test_reflectable.test.subtype_test.D",
            7,
            5,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            14,
            {},
            {},
            {},
            -1,
            5,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"E",
            r"test_reflectable.test.subtype_test.E",
            7,
            6,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            5,
            {},
            {},
            {},
            -1,
            6,
            const <int>[3],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"F",
            r"test_reflectable.test.subtype_test.F",
            7,
            7,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            14,
            {},
            {},
            {},
            -1,
            7,
            const <int>[6, 5],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"M1",
            r"test_reflectable.test.subtype_test.M1",
            7,
            8,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            14,
            {},
            {},
            {},
            -1,
            8,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"M2",
            r"test_reflectable.test.subtype_test.M2",
            7,
            9,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            14,
            {},
            {},
            {},
            -1,
            9,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"G",
            r"test_reflectable.test.subtype_test.G",
            7,
            10,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            15,
            {},
            {},
            {},
            -1,
            10,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1",
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1",
            583,
            11,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            5,
            const {},
            const {},
            const {},
            -1,
            8,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"H",
            r"test_reflectable.test.subtype_test.H",
            7,
            12,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            11,
            const {},
            const {},
            const {},
            -1,
            9,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"Reflectable",
            r"reflectable.reflectable.Reflectable",
            519,
            13,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            16,
            {},
            {},
            {},
            -1,
            13,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"Object",
            r"dart.core.Object",
            7,
            14,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            null,
            {},
            {},
            {},
            -1,
            14,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1, test_reflectable.test.subtype_test.M2",
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1, test_reflectable.test.subtype_test.M2",
            583,
            15,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            11,
            const {},
            const {},
            const {},
            -1,
            9,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"ReflectableImpl",
            r"reflectable.src.reflectable_transformer_based.ReflectableImpl",
            519,
            16,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            17,
            {},
            {},
            {},
            -1,
            16,
            const <int>[],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"ReflectableBase",
            r"reflectable.src.reflectable_base.ReflectableBase",
            7,
            17,
            const prefix0.Reflector(),
            const <int>[-1],
            null,
            null,
            14,
            {},
            {},
            {},
            -1,
            17,
            const <int>[],
            null,
            {})
      ],
      null,
      null,
      <Type>[
        prefix0.Reflector,
        prefix0.InsufficientReflector,
        prefix0.A,
        prefix0.B,
        prefix0.C,
        prefix0.D,
        prefix0.E,
        prefix0.F,
        prefix0.M1,
        prefix0.M2,
        prefix0.G,
        const r.FakeType(
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1"),
        prefix0.H,
        prefix1.Reflectable,
        Object,
        const r.FakeType(
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1, test_reflectable.test.subtype_test.M2"),
        prefix2.ReflectableImpl,
        prefix3.ReflectableBase
      ],
      18,
      {},
      {},
      null,
      []),
  const prefix0.InsufficientReflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Reflector",
            r"test_reflectable.test.subtype_test.Reflector",
            7,
            0,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"InsufficientReflector",
            r"test_reflectable.test.subtype_test.InsufficientReflector",
            7,
            1,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"A",
            r"test_reflectable.test.subtype_test.A",
            7,
            2,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"B",
            r"test_reflectable.test.subtype_test.B",
            7,
            3,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"C",
            r"test_reflectable.test.subtype_test.C",
            7,
            4,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"D",
            r"test_reflectable.test.subtype_test.D",
            7,
            5,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"E",
            r"test_reflectable.test.subtype_test.E",
            7,
            6,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"F",
            r"test_reflectable.test.subtype_test.F",
            7,
            7,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"M1",
            r"test_reflectable.test.subtype_test.M1",
            7,
            8,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"M2",
            r"test_reflectable.test.subtype_test.M2",
            7,
            9,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"G",
            r"test_reflectable.test.subtype_test.G",
            7,
            10,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1",
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1",
            583,
            11,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            const {},
            const {},
            const {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"H",
            r"test_reflectable.test.subtype_test.H",
            7,
            12,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            const {},
            const {},
            const {},
            -1,
            -1,
            const <int>[-1],
            null,
            {}),
        new r.NonGenericClassMirrorImpl(
            r"test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1, test_reflectable.test.subtype_test.M2",
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1, test_reflectable.test.subtype_test.M2",
            583,
            13,
            const prefix0.InsufficientReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            const {},
            const {},
            const {},
            -1,
            -1,
            const <int>[-1],
            null,
            {})
      ],
      null,
      null,
      <Type>[
        prefix0.Reflector,
        prefix0.InsufficientReflector,
        prefix0.A,
        prefix0.B,
        prefix0.C,
        prefix0.D,
        prefix0.E,
        prefix0.F,
        prefix0.M1,
        prefix0.M2,
        prefix0.G,
        const r.FakeType(
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1"),
        prefix0.H,
        const r.FakeType(
            r"test_reflectable.test.subtype_test.test_reflectable.test.subtype_test.D with test_reflectable.test.subtype_test.M1, test_reflectable.test.subtype_test.M2")
      ],
      14,
      {},
      {},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
