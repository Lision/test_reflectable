// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'proxy_test.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {
  const prefix0.ProxyReflectable(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"A",
            r"test_reflectable.test.proxy_test.A",
            7,
            0,
            const prefix0.ProxyReflectable(),
            const <int>[0, 1, 2],
            const <int>[5, 6, 7, 8, 9, 1, 2, 3, 4],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(
            r"i", 32773, 0, const prefix0.ProxyReflectable(), -1, -1, -1, null),
        new r.MethodMirrorImpl(r"foo", 131074, 0, -1, -1, -1, const <int>[],
            const prefix0.ProxyReflectable(), null),
        new r.MethodMirrorImpl(r"bar", 262146, 0, null, -1, -1, const <int>[0],
            const prefix0.ProxyReflectable(), null),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ProxyReflectable(), 0, -1, -1, 3),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.ProxyReflectable(), 0, -1, -1, 4),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, -1, -1, const <int>[2],
            const prefix0.ProxyReflectable(), null),
        new r.MethodMirrorImpl(r"toString", 131074, null, -1, -1, -1,
            const <int>[], const prefix0.ProxyReflectable(), null),
        new r.MethodMirrorImpl(r"noSuchMethod", 65538, null, null, -1, -1,
            const <int>[3], const prefix0.ProxyReflectable(), null),
        new r.MethodMirrorImpl(r"hashCode", 131075, null, -1, -1, -1,
            const <int>[], const prefix0.ProxyReflectable(), null),
        new r.MethodMirrorImpl(r"runtimeType", 131075, null, -1, -1, -1,
            const <int>[], const prefix0.ProxyReflectable(), null)
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(r"i", 32774, 2,
            const prefix0.ProxyReflectable(), -1, -1, -1, null, null, null),
        new r.ParameterMirrorImpl(r"_i", 32870, 4,
            const prefix0.ProxyReflectable(), -1, -1, -1, null, null, null),
        new r.ParameterMirrorImpl(r"other", 16390, 5,
            const prefix0.ProxyReflectable(), null, -1, -1, null, null, null),
        new r.ParameterMirrorImpl(r"invocation", 32774, 7,
            const prefix0.ProxyReflectable(), -1, -1, -1, null, null, null)
      ],
      <Type>[prefix0.A],
      1,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"foo": (dynamic instance) => instance.foo,
        r"bar": (dynamic instance) => instance.bar,
        r"i": (dynamic instance) => instance.i
      },
      {r"i=": (dynamic instance, value) => instance.i = value},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
